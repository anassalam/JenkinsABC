# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  buildConfiguration: 'Release'
  dockerId: 'testjenkinsabcacr'
  dockerPassword: 'WSj50CAdMPaknx+pvuk4HVGGuTHJwRQm'
  imageName: 'containerapp'
  dockerServer: 'testjenkinsabcacr.azurecr.io'

steps:

#- script: dotnet restore
#  displayName: 'Packages Restore'
#- script: dotnet build --configuration $(buildConfiguration)
#  displayName: 'Code Build'
#- script: dotnet test DotNet.Test --configuration $(buildConfiguration) --logger trx
#  displayName: 'Test Cases'
#- script: dotnet publish --configuration $(buildConfiguration)
#  displayName: 'Publishing'
#
#- task: PublishTestResults@2
#  inputs:
#    testRunner: VSTest
#    testResultsFiles: '**/*.trx'
#
#- task: ArchiveFiles@2
#  displayName: "Archive files"
#  inputs:
#    rootFolderOrFile: "$(System.DefaultWorkingDirectory)"
#    includeRootFolder: false
#    archiveFile: "$(System.DefaultWorkingDirectory)/$(Build.BuildId).zip"
#
#
#- task: PublishBuildArtifacts@1
#  inputs:
#    PathtoPublish: '$(System.DefaultWorkingDirectory)'
#    name: 'drop'

#- script: docker build -f ./ContainerApp/Dockerfile -t $(dockerId)/$(imageName) .
#  displayName: 'ContainerRelease'

- script: docker login -u $(dockerId) -p $(dockerPassword) $(dockerServer)
  displayName: 'Container Service login'
#  env:
#    pswd: $(dockerPassword)

#- script: docker push $(dockerId)/$(imageName)
#  displayName: 'ContainerRelease'
